input {
  redis {
    host => "127.0.0.1"
    # these settings should match the output of the agent
    data_type => "list"
    key => "logstash"
    # We use the 'json' codec here because we expect to read
    # json events from redis.
    codec => json
  }
}

filter {
  if [type] == "postfix" {
    mutate {
      convert => ["delay", "float"]
    }
  }
  if [type] == "tomcat_access_logs" {
    mutate {
      convert => ["requesttime", "float"]
    }
  }
}

output {
  if [type] == "catalina" {
    elasticsearch {
      host => "127.0.0.1"
      cluster => "{{ cluster_name }}"
      index => "catalina-%{+YYYY.MM.dd}"
      template => "{{ installation_path }}/catalina.json"
      template_name => "catalina_1"
      template_overwrite => true
    }
  } else if [type] == "postfix" {
    elasticsearch {
      host => "127.0.0.1"
      cluster => "{{ cluster_name }}"
      index => "postfix-%{+YYYY.MM.dd}"
      template => "{{ installation_path }}/postfix.json"
      template_name => "postfix_1"
      template_overwrite => true
    } 
  } else if [type] == "activemq" {
    elasticsearch {
      host => "127.0.0.1"
      cluster => "{{ cluster_name }}"
      index => "activemq-%{+YYYY.MM.dd}"
      template => "{{ installation_path }}/activemq.json"
      template_name => "activemq_1"
      template_overwrite => true
    }
  } else if [type] == "tomcat_access_logs" {
    elasticsearch {
      host => "127.0.0.1"
      cluster => "{{ cluster_name }}"
      index => "tomcat_access_logs-%{+YYYY.MM.dd}"
      template => "{{ installation_path }}/tomcat_access_logs.json"
      template_name => "tomcat_access_logs_1"
      template_overwrite => true
    }
  } else {
    elasticsearch {
      host => "127.0.0.1"
      cluster => "{{ cluster_name }}"
      template => "{{ installation_path }}/logstash_default.json"
      template_overwrite => true
    }
  }
}
